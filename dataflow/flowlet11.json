{
	"name": "flowlet11",
	"properties": {
		"type": "Flowlet",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "amesproperty"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join2"
				},
				{
					"name": "amesdbtemp"
				},
				{
					"name": "floordetail"
				},
				{
					"name": "mssubclass"
				},
				{
					"name": "mszoning"
				},
				{
					"name": "salesproperty"
				},
				{
					"name": "typequality"
				}
			],
			"scriptLines": [
				"input(output(",
				"          {Exter Cond} as long,",
				"          {Exter Qual} as long,",
				"          {Heating QC} as long,",
				"          {Kitchen Qual} as long,",
				"          {MS Zoning} as long,",
				"          pid as long,",
				"          {Roof Style} as string,",
				"          {Roof Matl} as string,",
				"          {Exterior 1st} as string,",
				"          {Exterior 2nd} as string,",
				"          {Mas Vnr Type} as string,",
				"          {Mas Vnr Area} as long,",
				"          foundation as string,",
				"          heating as string,",
				"          {Central Air} as boolean,",
				"          electrical as string,",
				"          {1st Flr SF} as long,",
				"          {2nd Flr SF} as long,",
				"          {Low Qual Fin SF} as long,",
				"          {Kitchen AbvGr} as long,",
				"          {TotRms AbvGrd} as long,",
				"          functional as string,",
				"          fireplaces as long,",
				"          {Fireplace Qu} as string,",
				"          {Paved Drive} as string,",
				"          {Wood Deck SF} as long,",
				"          {Open Porch SF} as long,",
				"          {Enclosed Porch} as long,",
				"          {3Ssn Porch} as long,",
				"          {Screen Porch} as long,",
				"          fence as string,",
				"          {MS SubClass} as long",
				"     ),",
				"     order: 0,",
				"     allowSchemaDrift: true) ~> amesdbtemp",
				"input(output(",
				"          pid as integer,",
				"          Floor as integer,",
				"          bedrooms as integer,",
				"          {Full Bath} as integer,",
				"          {Half Bath} as integer",
				"     ),",
				"     order: 1,",
				"     allowSchemaDrift: true) ~> floordetail",
				"input(output(",
				"          description as string,",
				"          code as long",
				"     ),",
				"     order: 2,",
				"     allowSchemaDrift: true) ~> mssubclass",
				"input(output(",
				"          id as long,",
				"          description as string,",
				"          code as string",
				"     ),",
				"     order: 3,",
				"     allowSchemaDrift: true) ~> mszoning",
				"input(output(",
				"          pid as long,",
				"          {Sale Date} as timestamp,",
				"          {Sale Type} as string,",
				"          {Sale Condition} as string,",
				"          saleprice as long",
				"     ),",
				"     order: 4,",
				"     allowSchemaDrift: true) ~> salesproperty",
				"input(output(",
				"          id as long,",
				"          code as string,",
				"          description as string",
				"     ),",
				"     order: 5,",
				"     allowSchemaDrift: true) ~> typequality",
				"source(output(",
				"          PID as integer,",
				"          {Lot Frontage} as short,",
				"          {Lot Area} as integer,",
				"          Street as string,",
				"          Alley as string,",
				"          {Lot Shape} as string,",
				"          {Land Contour} as string,",
				"          Utilities as string,",
				"          {Lot Config} as string,",
				"          {Land Slope} as string,",
				"          Neighborhood as string,",
				"          {Condition 1} as string,",
				"          {Condition 2} as string,",
				"          {Bldg Type} as string,",
				"          {House Style} as string,",
				"          {Overall Qual} as short,",
				"          {Overall Cond} as short,",
				"          {Year Built} as short,",
				"          {Year Remod/Add} as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'archivosfinal',",
				"     fileName: 'AmesProperty.csv',",
				"     columnDelimiter: ';',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> amesproperty",
				"amesdbtemp, salesproperty join(amesdbtemp2@PID == Salesproperty2@PID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2"
			]
		}
	}
}